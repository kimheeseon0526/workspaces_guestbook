plugins {
  id 'java'
  id 'war'
  id 'org.springframework.boot' version '3.5.3'
  id 'io.spring.dependency-management' version '1.1.7'

}

group = 'com.levelupseon'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'

  compileOnly 'org.projectlombok:lombok'
  testImplementation 'org.projectlombok:lombok'

  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

  annotationProcessor 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'

  implementation 'org.springframework.boot:spring-boot-starter-log4j2'

  //QueryDSL
  implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
  annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
  annotationProcessor "jakarta.annotation:jakarta.annotation-api:"
  annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

configurations {
  all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
  }
}

// Querydsl 설정부
def querydslDir = "$buildDir/generated/querydsl"


sourceSets {
  main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile).configureEach {
  options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
  options.compilerArgs << "-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated"
}

clean.doLast {
  file(querydslDir).deleteDir()
}


tasks.named('test') {
  useJUnitPlatform()
}
